(function () {
'use strict';

class Utils {
    constructor() {}

    static initTemplate(wrapperEl, templateId) {
        let template = document.querySelector(`#${templateId}`);
        let clon = template.content.cloneNode(true);
        wrapperEl.innerHTML = '';
        wrapperEl.appendChild(clon);
    }

    static setActiveLink(elem, object) {
        object.forEach(item => {
            if (item == elem) {
                item.classList.add("active");
            } else {
                item.classList.remove("active");
            }
        });
    }

    static navigateTo(routeName) {
        window.location.hash = "#" + routeName;
    }

    static isLoggedIn() {
        let credentials = JSON.parse(localStorage.getItem('credentials'));
        return !!credentials;
    }
}

let wraper = document.querySelector("#wrapper");

let routeConfig = {
    "": () => {
        Utils.initTemplate(wrapper, "login-view");
    },
    "gallery": () => {
        let observer = new Observer();
    },
    "profile": () => {
    }
};

function activateRoute(routeName) {
    let route = routeConfig[routeName];
    route && route();
}

function updateRoute() {
    let routeName = document.location.hash.replace(/^#/, '');
    if (routeName) {
        Utils.navigateTo(routeName);
        activateRoute(routeName);
    } else {
        activateRoute(routeName);
    }
}

window.addEventListener('load', updateRoute);
window.addEventListener('hashchange', updateRoute);

}());

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIiwicm91dGVyLmpzIiwiYXBwLmpzIl0sIm5hbWVzIjpbIlV0aWxzIiwiaW5pdFRlbXBsYXRlIiwid3JhcHBlckVsIiwidGVtcGxhdGVJZCIsInRlbXBsYXRlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY2xvbiIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJpbm5lckhUTUwiLCJhcHBlbmRDaGlsZCIsInNldEFjdGl2ZUxpbmsiLCJlbGVtIiwib2JqZWN0IiwiZm9yRWFjaCIsIml0ZW0iLCJjbGFzc0xpc3QiLCJhZGQiLCJyZW1vdmUiLCJuYXZpZ2F0ZVRvIiwicm91dGVOYW1lIiwibG9jYXRpb24iLCJoYXNoIiwiaXNMb2dnZWRJbiIsImNyZWRlbnRpYWxzIiwiSlNPTiIsInBhcnNlIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIndyYXBlciIsInJvdXRlQ29uZmlnIiwid3JhcHBlciIsIm9ic2VydmVyIiwiT2JzZXJ2ZXIiLCJhY3RpdmF0ZVJvdXRlIiwicm91dGUiLCJ1cGRhdGVSb3V0ZSIsInJlcGxhY2UiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIl0sIm1hcHBpbmdzIjoiOzs7QUFBZSxNQUFNQSxLQUFOLENBQVk7a0JBQ1Q7O1dBRVBDLFlBQVAsQ0FBb0JDLFNBQXBCLEVBQStCQyxVQUEvQixFQUEyQztZQUNuQ0MsV0FBV0MsU0FBU0MsYUFBVCxDQUF3QixJQUFHSCxVQUFXLEVBQXRDLENBQWY7WUFDSUksT0FBT0gsU0FBU0ksT0FBVCxDQUFpQkMsU0FBakIsQ0FBMkIsSUFBM0IsQ0FBWDtrQkFDVUMsU0FBVixHQUFzQixFQUF0QjtrQkFDVUMsV0FBVixDQUFzQkosSUFBdEI7OztXQUdHSyxhQUFQLENBQXFCQyxJQUFyQixFQUEwQkMsTUFBMUIsRUFBa0M7ZUFDdkJDLE9BQVAsQ0FBZUMsUUFBUTtnQkFDaEJBLFFBQVFILElBQVgsRUFBaUI7cUJBQ1JJLFNBQUwsQ0FBZUMsR0FBZixDQUFtQixRQUFuQjthQURKLE1BRU87cUJBQ0VELFNBQUwsQ0FBZUUsTUFBZixDQUFzQixRQUF0Qjs7U0FKUjs7O1dBU0dDLFVBQVAsQ0FBa0JDLFNBQWxCLEVBQTZCO2VBQ2xCQyxRQUFQLENBQWdCQyxJQUFoQixHQUFzQixNQUFNRixTQUE1Qjs7O1dBR0dHLFVBQVAsR0FBb0I7WUFDWkMsY0FBY0MsS0FBS0MsS0FBTCxDQUFXQyxhQUFhQyxPQUFiLENBQXFCLGFBQXJCLENBQVgsQ0FBbEI7ZUFDTyxDQUFDLENBQUNKLFdBQVQ7Ozs7QUNaUixJQUFJSyxTQUFTekIsU0FBU0MsYUFBVCxDQUF1QixVQUF2QixDQUFiOztBQUVBLElBQUl5QixjQUFjO1FBQ1QsTUFBTTtjQUNEOUIsWUFBTixDQUFtQitCLE9BQW5CLEVBQTRCLFlBQTVCO0FBQ0EsQUFHSCxLQU5hO2VBT0YsTUFBTTtBQUNwQixBQUdNLFlBQUlDLFdBQVcsSUFBSUMsUUFBSixFQUFmO0FBQ0EsQUFDSCxLQWJhO2VBY0YsTUFBTTtBQUNsQixBQUlDO0NBbkJMOztBQXNCQSxTQUFTQyxhQUFULENBQXVCZCxTQUF2QixFQUFpQztRQUN6QmUsUUFBUUwsWUFBWVYsU0FBWixDQUFaO2FBQ1NlLE9BQVQ7OztBQUdKLEFBQU8sU0FBU0MsV0FBVCxHQUF1QjtRQUN0QmhCLFlBQVloQixTQUFTaUIsUUFBVCxDQUFrQkMsSUFBbEIsQ0FBdUJlLE9BQXZCLENBQStCLElBQS9CLEVBQXFDLEVBQXJDLENBQWhCO1FBQ0dqQixTQUFILEVBQWM7Y0FDSkQsVUFBTixDQUFpQkMsU0FBakI7c0JBQ2NBLFNBQWQ7S0FGSixNQUdPO3NCQUNXQSxTQUFkOzs7O0FDL0NSa0IsT0FBT0MsZ0JBQVAsQ0FBd0IsTUFBeEIsRUFBZ0NILFdBQWhDO0FBQ0FFLE9BQU9DLGdCQUFQLENBQXdCLFlBQXhCLEVBQXNDSCxXQUF0QyIsImZpbGUiOiJhcHAubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXRpbHMge1xuICAgIGNvbnN0cnVjdG9yICgpe31cblxuICAgIHN0YXRpYyBpbml0VGVtcGxhdGUod3JhcHBlckVsLCB0ZW1wbGF0ZUlkKSB7XG4gICAgICAgIGxldCB0ZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke3RlbXBsYXRlSWR9YCk7XG4gICAgICAgIGxldCBjbG9uID0gdGVtcGxhdGUuY29udGVudC5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICAgIHdyYXBwZXJFbC5pbm5lckhUTUwgPSAnJztcbiAgICAgICAgd3JhcHBlckVsLmFwcGVuZENoaWxkKGNsb24pO1xuICAgIH1cblxuICAgIHN0YXRpYyBzZXRBY3RpdmVMaW5rKGVsZW0sb2JqZWN0KSB7XG4gICAgICAgIG9iamVjdC5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICAgICAgaWYoaXRlbSA9PSBlbGVtKSB7XG4gICAgICAgICAgICAgICAgaXRlbS5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpdGVtLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgc3RhdGljIG5hdmlnYXRlVG8ocm91dGVOYW1lKSB7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5oYXNoPSBcIiNcIiArIHJvdXRlTmFtZTtcbiAgICB9XG5cbiAgICBzdGF0aWMgaXNMb2dnZWRJbigpIHtcbiAgICAgICAgbGV0IGNyZWRlbnRpYWxzID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY3JlZGVudGlhbHMnKSk7XG4gICAgICAgIHJldHVybiAhIWNyZWRlbnRpYWxzO1xuICAgIH1cbn0iLCJpbXBvcnQgdXRpbHMgZnJvbSAnLi91dGlscy5qcyc7XG5cbmltcG9ydCBHYWxsZXJ5TW9kZWwgZnJvbSAnLi9nYWxsZXJ5L2dhbGxlcnkubW9kZWwuanMnO1xuaW1wb3J0IEdhbGxlcnlWaWV3IGZyb20gJy4vZ2FsbGVyeS9nYWxsZXJ5LnZpZXcuanMnO1xuaW1wb3J0IEdhbGxlcnlDb250cm9sbGVyIGZyb20gJy4vZ2FsbGVyeS9nYWxsZXJ5LmNvbnRyb2xsZXIuanMnO1xuXG5pbXBvcnQgTG9naW5Nb2RlbCBmcm9tICcuL2xvZ2luL2xvZ2luLm1vZGVsLmpzJztcbmltcG9ydCBMb2dpblZpZXcgZnJvbSAnLi9sb2dpbi9sb2dpbi52aWV3LmpzJztcbmltcG9ydCBMb2dpbkNvbnRyb2xsZXIgZnJvbSAnLi9sb2dpbi9sb2dpbi5jb250cm9sbGVyLmpzJztcblxuaW1wb3J0IFByb2ZpbGVNb2RlbCBmcm9tICcuL3Byb2ZpbGUvcHJvZmlsZS5tb2RlbC5qcyc7XG5pbXBvcnQgUHJvZmlsZVZpZXcgZnJvbSAnLi9wcm9maWxlL3Byb2ZpbGUudmlldy5qcyc7XG5pbXBvcnQgUHJvZmlsZUNvbnRyb2xsZXIgZnJvbSAnLi9wcm9maWxlL3Byb2ZpbGUuY29udHJvbGxlci5qcydcblxubGV0IHdyYXBlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjd3JhcHBlclwiKTtcblxubGV0IHJvdXRlQ29uZmlnID0ge1xuICAgIFwiXCIgOiAoKSA9PiB7XG4gICAgICAgIHV0aWxzLmluaXRUZW1wbGF0ZSh3cmFwcGVyLCBcImxvZ2luLXZpZXdcIik7XG4gICAgICAgIGxldCBtb2RlbCA9IG5ldyBMb2dpbk1vZGVsKCk7XG4gICAgICAgIGxldCB2aWV3ID0gbmV3IExvZ2luVmlldygpO1xuICAgICAgICBsZXQgY29udHJvbGxlciA9IG5ldyBMb2dpbkNvbnRyb2xsZXIobW9kZWwsIHZpZXcsIHV0aWxzKTtcbiAgICB9LCBcbiAgICBcImdhbGxlcnlcIiA6ICgpID0+IHtcbiAgLyogICAgICAgdXRpbHMuaW5pdFRlbXBsYXRlKHdyYXBwZXIsIFwiZ2FsbGVyeS12aWV3XCIpOyAqL1xuICAgICAgICBsZXQgbW9kZWwgPSBuZXcgR2FsbGVyeU1vZGVsO1xuICAgICAgICBsZXQgdmlldyA9IG5ldyBHYWxsZXJ5VmlldztcbiAgICAgICAgbGV0IG9ic2VydmVyID0gbmV3IE9ic2VydmVyO1xuICAgICAgICBuZXcgR2FsbGVyeUNvbnRyb2xsZXIobW9kZWwsIHZpZXcsIG9ic2VydmVyLCB1dGlscyk7XG4gICAgfSxcbiAgICBcInByb2ZpbGVcIiA6ICgpID0+IHtcbiAgICAvKiAgICAgdXRpbHMuaW5pdFRlbXBsYXRlKHdyYXBwZXIsIFwicHJvZmlsZS12aWV3XCIpOyAqL1xuICAgICAgICBsZXQgbW9kZWwgPSBuZXcgUHJvZmlsZU1vZGVsO1xuICAgICAgICBsZXQgdmlldyA9IG5ldyBQcm9maWxlVmlldztcbiAgICAgICAgbmV3IFByb2ZpbGVDb250cm9sbGVyKG1vZGVsLCB2aWV3LCB1dGlscyk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBhY3RpdmF0ZVJvdXRlKHJvdXRlTmFtZSl7XG4gICAgbGV0IHJvdXRlID0gcm91dGVDb25maWdbcm91dGVOYW1lXTtcbiAgICByb3V0ZSAmJiByb3V0ZSgpOyAgICBcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZVJvdXRlKCkge1xuICAgIGxldCByb3V0ZU5hbWUgPSBkb2N1bWVudC5sb2NhdGlvbi5oYXNoLnJlcGxhY2UoL14jLywgJycpO1xuICAgIGlmKHJvdXRlTmFtZSkge1xuICAgICAgICB1dGlscy5uYXZpZ2F0ZVRvKHJvdXRlTmFtZSk7IFxuICAgICAgICBhY3RpdmF0ZVJvdXRlKHJvdXRlTmFtZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgYWN0aXZhdGVSb3V0ZShyb3V0ZU5hbWUpO1xuICAgIH1cbn0iLCJpbXBvcnQgeyB1cGRhdGVSb3V0ZSB9IGZyb20gJy4vcm91dGVyLmpzJ1xuXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIHVwZGF0ZVJvdXRlKTtcbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdoYXNoY2hhbmdlJywgdXBkYXRlUm91dGUpOyJdfQ==
