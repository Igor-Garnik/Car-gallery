(function () {
'use strict';

class Utils {
    constructor() {}

    static initTemplate(wrapperEl, templateId) {
        let template = document.querySelector(`#${templateId}`);
        let clon = template.content.cloneNode(true);
        wrapperEl.innerHTML = '';
        wrapperEl.appendChild(clon);
    }

    static setActiveLink(elem, object) {
        object.forEach(item => {
            if (item == elem) {
                item.classList.add("active");
            } else {
                item.classList.remove("active");
            }
        });
    }

    static navigateTo(routeName) {
        window.location.hash = "#" + routeName;
    }

    static isLoggedIn() {
        let credentials = JSON.parse(localStorage.getItem('credentials'));
        return !!credentials;
    }
}

let routeConfig = {
    "": () => {
        Utils.initTemplate(wrapper, "login-view");
    },
    "gallery": () => {
        Utils.initTemplate(wrapper, "gallery-view");
        let observer = new Observer();
    },
    "profile": () => {
        Utils.initTemplate(wrapper, "profile-view");
    }
};

function activateRoute(routeName) {
    let route = routeConfig[routeName];
    route && route();
}

function updateRoute() {
    let routeName = document.location.hash.replace(/^#/, '');
    if (routeName) {
        Utils.navigateTo(routeName);
        activateRoute(routeName);
    } else {
        activateRoute(routeName);
    }
}

window.addEventListener('load', updateRoute);
window.addEventListener('hashchange', updateRoute);

}());

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIiwicm91dGVyLmpzIiwiYXBwLmpzIl0sIm5hbWVzIjpbIlV0aWxzIiwiaW5pdFRlbXBsYXRlIiwid3JhcHBlckVsIiwidGVtcGxhdGVJZCIsInRlbXBsYXRlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY2xvbiIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJpbm5lckhUTUwiLCJhcHBlbmRDaGlsZCIsInNldEFjdGl2ZUxpbmsiLCJlbGVtIiwib2JqZWN0IiwiZm9yRWFjaCIsIml0ZW0iLCJjbGFzc0xpc3QiLCJhZGQiLCJyZW1vdmUiLCJuYXZpZ2F0ZVRvIiwicm91dGVOYW1lIiwibG9jYXRpb24iLCJoYXNoIiwiaXNMb2dnZWRJbiIsImNyZWRlbnRpYWxzIiwiSlNPTiIsInBhcnNlIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInJvdXRlQ29uZmlnIiwid3JhcHBlciIsIm9ic2VydmVyIiwiT2JzZXJ2ZXIiLCJhY3RpdmF0ZVJvdXRlIiwicm91dGUiLCJ1cGRhdGVSb3V0ZSIsInJlcGxhY2UiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIl0sIm1hcHBpbmdzIjoiOzs7QUFBZSxNQUFNQSxLQUFOLENBQVk7a0JBQ1Q7O1dBRVBDLFlBQVAsQ0FBb0JDLFNBQXBCLEVBQStCQyxVQUEvQixFQUEyQztZQUNuQ0MsV0FBV0MsU0FBU0MsYUFBVCxDQUF3QixJQUFHSCxVQUFXLEVBQXRDLENBQWY7WUFDSUksT0FBT0gsU0FBU0ksT0FBVCxDQUFpQkMsU0FBakIsQ0FBMkIsSUFBM0IsQ0FBWDtrQkFDVUMsU0FBVixHQUFzQixFQUF0QjtrQkFDVUMsV0FBVixDQUFzQkosSUFBdEI7OztXQUdHSyxhQUFQLENBQXFCQyxJQUFyQixFQUEwQkMsTUFBMUIsRUFBa0M7ZUFDdkJDLE9BQVAsQ0FBZUMsUUFBUTtnQkFDaEJBLFFBQVFILElBQVgsRUFBaUI7cUJBQ1JJLFNBQUwsQ0FBZUMsR0FBZixDQUFtQixRQUFuQjthQURKLE1BRU87cUJBQ0VELFNBQUwsQ0FBZUUsTUFBZixDQUFzQixRQUF0Qjs7U0FKUjs7O1dBU0dDLFVBQVAsQ0FBa0JDLFNBQWxCLEVBQTZCO2VBQ2xCQyxRQUFQLENBQWdCQyxJQUFoQixHQUFzQixNQUFNRixTQUE1Qjs7O1dBR0dHLFVBQVAsR0FBb0I7WUFDWkMsY0FBY0MsS0FBS0MsS0FBTCxDQUFXQyxhQUFhQyxPQUFiLENBQXFCLGFBQXJCLENBQVgsQ0FBbEI7ZUFDTyxDQUFDLENBQUNKLFdBQVQ7Ozs7QUNaUixJQUFJSyxjQUFjO1FBQ1QsTUFBTTtjQUNEN0IsWUFBTixDQUFtQjhCLE9BQW5CLEVBQTRCLFlBQTVCO0FBQ0EsQUFHSCxLQU5hO2VBT0YsTUFBTTtjQUNSOUIsWUFBTixDQUFtQjhCLE9BQW5CLEVBQTRCLGNBQTVCO0FBQ0EsQUFFQSxZQUFJQyxXQUFXLElBQUlDLFFBQUosRUFBZjtBQUNBLEFBQ0gsS0FiYTtlQWNGLE1BQU07Y0FDUmhDLFlBQU4sQ0FBbUI4QixPQUFuQixFQUE0QixjQUE1QjtBQUNBLEFBR0g7Q0FuQkw7O0FBc0JBLFNBQVNHLGFBQVQsQ0FBdUJiLFNBQXZCLEVBQWlDO1FBQ3pCYyxRQUFRTCxZQUFZVCxTQUFaLENBQVo7YUFDU2MsT0FBVDs7O0FBR0osQUFBTyxTQUFTQyxXQUFULEdBQXVCO1FBQ3RCZixZQUFZaEIsU0FBU2lCLFFBQVQsQ0FBa0JDLElBQWxCLENBQXVCYyxPQUF2QixDQUErQixJQUEvQixFQUFxQyxFQUFyQyxDQUFoQjtRQUNHaEIsU0FBSCxFQUFjO2NBQ0pELFVBQU4sQ0FBaUJDLFNBQWpCO3NCQUNjQSxTQUFkO0tBRkosTUFHTztzQkFDV0EsU0FBZDs7OztBQzdDUmlCLE9BQU9DLGdCQUFQLENBQXdCLE1BQXhCLEVBQWdDSCxXQUFoQztBQUNBRSxPQUFPQyxnQkFBUCxDQUF3QixZQUF4QixFQUFzQ0gsV0FBdEMiLCJmaWxlIjoiYXBwLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIFV0aWxzIHtcbiAgICBjb25zdHJ1Y3RvciAoKXt9XG5cbiAgICBzdGF0aWMgaW5pdFRlbXBsYXRlKHdyYXBwZXJFbCwgdGVtcGxhdGVJZCkge1xuICAgICAgICBsZXQgdGVtcGxhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjJHt0ZW1wbGF0ZUlkfWApO1xuICAgICAgICBsZXQgY2xvbiA9IHRlbXBsYXRlLmNvbnRlbnQuY2xvbmVOb2RlKHRydWUpO1xuICAgICAgICB3cmFwcGVyRWwuaW5uZXJIVE1MID0gJyc7XG4gICAgICAgIHdyYXBwZXJFbC5hcHBlbmRDaGlsZChjbG9uKTtcbiAgICB9XG5cbiAgICBzdGF0aWMgc2V0QWN0aXZlTGluayhlbGVtLG9iamVjdCkge1xuICAgICAgICBvYmplY3QuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgICAgIGlmKGl0ZW0gPT0gZWxlbSkge1xuICAgICAgICAgICAgICAgIGl0ZW0uY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaXRlbS5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIHN0YXRpYyBuYXZpZ2F0ZVRvKHJvdXRlTmFtZSkge1xuICAgICAgICB3aW5kb3cubG9jYXRpb24uaGFzaD0gXCIjXCIgKyByb3V0ZU5hbWU7XG4gICAgfVxuXG4gICAgc3RhdGljIGlzTG9nZ2VkSW4oKSB7XG4gICAgICAgIGxldCBjcmVkZW50aWFscyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2NyZWRlbnRpYWxzJykpO1xuICAgICAgICByZXR1cm4gISFjcmVkZW50aWFscztcbiAgICB9XG59IiwiaW1wb3J0IHV0aWxzIGZyb20gJy4vdXRpbHMuanMnO1xuXG5pbXBvcnQgR2FsbGVyeU1vZGVsIGZyb20gJy4vZ2FsbGVyeS9nYWxsZXJ5Lm1vZGVsLmpzJztcbmltcG9ydCBHYWxsZXJ5VmlldyBmcm9tICcuL2dhbGxlcnkvZ2FsbGVyeS52aWV3LmpzJztcbmltcG9ydCBHYWxsZXJ5Q29udHJvbGxlciBmcm9tICcuL2dhbGxlcnkvZ2FsbGVyeS5jb250cm9sbGVyLmpzJztcblxuaW1wb3J0IExvZ2luTW9kZWwgZnJvbSAnLi9sb2dpbi9sb2dpbi5tb2RlbC5qcyc7XG5pbXBvcnQgTG9naW5WaWV3IGZyb20gJy4vbG9naW4vbG9naW4udmlldy5qcyc7XG5pbXBvcnQgTG9naW5Db250cm9sbGVyIGZyb20gJy4vbG9naW4vbG9naW4uY29udHJvbGxlci5qcyc7XG5cbmltcG9ydCBQcm9maWxlTW9kZWwgZnJvbSAnLi9wcm9maWxlL3Byb2ZpbGUubW9kZWwuanMnO1xuaW1wb3J0IFByb2ZpbGVWaWV3IGZyb20gJy4vcHJvZmlsZS9wcm9maWxlLnZpZXcuanMnO1xuaW1wb3J0IFByb2ZpbGVDb250cm9sbGVyIGZyb20gJy4vcHJvZmlsZS9wcm9maWxlLmNvbnRyb2xsZXIuanMnXG5cbmxldCByb3V0ZUNvbmZpZyA9IHtcbiAgICBcIlwiIDogKCkgPT4ge1xuICAgICAgICB1dGlscy5pbml0VGVtcGxhdGUod3JhcHBlciwgXCJsb2dpbi12aWV3XCIpO1xuICAgICAgICBsZXQgbW9kZWwgPSBuZXcgTG9naW5Nb2RlbCgpO1xuICAgICAgICBsZXQgdmlldyA9IG5ldyBMb2dpblZpZXcoKTtcbiAgICAgICAgbGV0IGNvbnRyb2xsZXIgPSBuZXcgTG9naW5Db250cm9sbGVyKG1vZGVsLCB2aWV3LCB1dGlscyk7XG4gICAgfSwgXG4gICAgXCJnYWxsZXJ5XCIgOiAoKSA9PiB7XG4gICAgICAgIHV0aWxzLmluaXRUZW1wbGF0ZSh3cmFwcGVyLCBcImdhbGxlcnktdmlld1wiKTtcbiAgICAgICAgbGV0IG1vZGVsID0gbmV3IEdhbGxlcnlNb2RlbDtcbiAgICAgICAgbGV0IHZpZXcgPSBuZXcgR2FsbGVyeVZpZXc7XG4gICAgICAgIGxldCBvYnNlcnZlciA9IG5ldyBPYnNlcnZlcjtcbiAgICAgICAgbmV3IEdhbGxlcnlDb250cm9sbGVyKG1vZGVsLCB2aWV3LCBvYnNlcnZlciwgdXRpbHMpO1xuICAgIH0sXG4gICAgXCJwcm9maWxlXCIgOiAoKSA9PiB7XG4gICAgICAgIHV0aWxzLmluaXRUZW1wbGF0ZSh3cmFwcGVyLCBcInByb2ZpbGUtdmlld1wiKTtcbiAgICAgICAgbGV0IG1vZGVsID0gbmV3IFByb2ZpbGVNb2RlbDtcbiAgICAgICAgbGV0IHZpZXcgPSBuZXcgUHJvZmlsZVZpZXc7XG4gICAgICAgIG5ldyBQcm9maWxlQ29udHJvbGxlcihtb2RlbCwgdmlldywgdXRpbHMpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gYWN0aXZhdGVSb3V0ZShyb3V0ZU5hbWUpe1xuICAgIGxldCByb3V0ZSA9IHJvdXRlQ29uZmlnW3JvdXRlTmFtZV07XG4gICAgcm91dGUgJiYgcm91dGUoKTsgICAgXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVSb3V0ZSgpIHtcbiAgICBsZXQgcm91dGVOYW1lID0gZG9jdW1lbnQubG9jYXRpb24uaGFzaC5yZXBsYWNlKC9eIy8sICcnKTtcbiAgICBpZihyb3V0ZU5hbWUpIHtcbiAgICAgICAgdXRpbHMubmF2aWdhdGVUbyhyb3V0ZU5hbWUpOyBcbiAgICAgICAgYWN0aXZhdGVSb3V0ZShyb3V0ZU5hbWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGFjdGl2YXRlUm91dGUocm91dGVOYW1lKTtcbiAgICB9XG59IiwiaW1wb3J0IHsgdXBkYXRlUm91dGUgfSBmcm9tICcuL3JvdXRlci5qcydcblxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCB1cGRhdGVSb3V0ZSk7XG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignaGFzaGNoYW5nZScsIHVwZGF0ZVJvdXRlKTsiXX0=
